docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d --no-deps node-app 
docker-compose -f docker-compose.yml -f docker-compose.dev.yml down
docker logs -f container_name
docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d -V
docker-compose -f docker-compose.yml -f docker-compose.prod.yml down
docker-compose -f docker-compose.yml -f docker-compose.prod.yml push node-app

docker swarm
docker swarm init --advertise-addr ip-address
docker stack deploy -c docker-compose.yml -c docker-compose.prod.yml myapp
docker stack services myapp
docker stack ps myapp

module.exports ={
    MONGO_IP: process.env.MONGO_IP || "mongo",
    MONGO_PORT:process.env.MONGO_PORT || 27017,
    MONGO_USER:process.env.MONGO_USER,
    MONGO_PASSWORD:process.env.MONGO_PASSWORD
}
const mongodbWithRetry = ()=>{
    mongoose
    .connect(mongourl,{
    useNewUrlParser: true,
    })
    .then(()=>console.log("db connected"))
    .catch((err)=>{
    console.log(err)
    setTimeout(mongodbWithRetry,5000)
    })
}